<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:gauge="clr-namespace:Syncfusion.Maui.Gauges;assembly=Syncfusion.Maui.Gauges"
             xmlns:chart="clr-namespace:Syncfusion.Maui.Charts;assembly=Syncfusion.Maui.Charts"
             xmlns:cards="clr-namespace:PanCardView;assembly=PanCardView"
             xmlns:converters="clr-namespace:PowerwallCompanionX.Converters"
             xmlns:viewmodels="clr-namespace:PowerwallCompanionX.ViewModels"
             x:DataType="viewmodels:MainViewModel"
             BackgroundColor="Black" 
             x:Class="PowerwallCompanionX.Views.MainPage"
             Shell.NavBarIsVisible="false">

    <Grid x:Name="rootGrid" Margin="{Binding PageMargin}" Opacity="{Binding PageOpacity}">
        <Grid.Resources>
            <converters:NullTGridLengthConverter x:Key="NullTGridLengthConverter"/>
            <converters:ErrorStatusToVisibilityConverter x:Key="ErrorStatusToVisibilityConverter"/>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="{Binding TitleRowHeight}" />
            <RowDefinition Height="*"/>
            <RowDefinition Height="{Binding ExtrasContent, Converter={StaticResource NullTGridLengthConverter}}"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.GestureRecognizers>
            <TapGestureRecognizer Tapped="grid_Tapped"/>
        </Grid.GestureRecognizers>
        <Image Source="AppLogo.png" VerticalOptions="Start" HorizontalOptions="Center" Scale="0.7" Margin="0,-10,0,-20">
            <Image.GestureRecognizers>
                <TapGestureRecognizer Tapped="status_Tapped" />
            </Image.GestureRecognizers>
        </Image>
        <Label Text="{Binding EnergySiteInfo.SiteName}" IsVisible="{Binding ShowSiteName}" HorizontalOptions="Center" Margin="0,25,0,-40" TextColor="Gray" FontSize="{Binding SmallFontSize}"/>


        <Grid x:Name="tabletGrid" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand" Grid.Row="1" Margin="{Binding PageMargin}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

        </Grid>
        
        <cards:CarouselView x:Name="carousel" Grid.Row="1" ItemAppeared="CarouselView_ItemAppeared"  IsPanSwipeEnabled="True" IsEnabled="True">
        </cards:CarouselView>


        <Label Grid.Row="1" x:Name="timeTextBlock" HorizontalTextAlignment="Start" VerticalTextAlignment="Start" FontSize="{Binding LargeFontSize}" TextColor="#888888" Margin="0,-45,0,0"
                               IsVisible="{Binding ShowClock, Mode=OneWay}" 
                               Text="{Binding Time, Mode=OneWay}" HorizontalOptions="Start" VerticalOptions="Start" />



        <Label Grid.Row="2" x:Name="extrasTextBlock" HorizontalTextAlignment="Center" VerticalTextAlignment="Start" FontSize="{Binding SmallFontSize}" TextColor="#888888"  HorizontalOptions="Center"  VerticalOptions="Start" Text="{Binding ExtrasContent}" />
        
        <ImageButton x:Name="settingsButton" 
                    Grid.Row="1" Source="Settings.png"
                    HeightRequest="30" WidthRequest="30"
                    Margin="0,-25,15,0"
                    BackgroundColor="Transparent"
                    HorizontalOptions="End"
                    VerticalOptions="Start"
                    Opacity="0"
                    Command="{Binding SettingsCommand}"
                    />

        <Label x:Name="errorIndicator" Text="⚠️" FontSize="24" VerticalOptions="Start" HorizontalOptions="End" Margin="0,0,15,0"  Grid.Row="1" IsVisible="{Binding Status, Converter={StaticResource ErrorStatusToVisibilityConverter}}">
            <Label.GestureRecognizers>
                <TapGestureRecognizer Tapped="ErrorGestureRecognizer_Tapped"  />
            </Label.GestureRecognizers>
        </Label>


        <!-- Instantaneous Power View-->
        <Grid x:Name="mainGrid" HorizontalOptions="Fill" VerticalOptions="Fill" IsClippedToBounds="True">
            <Grid.Resources>
                <converters:StatusToColorConverter x:Key="StatusToColorConverter"/>
                <converters:PositiveToBooleanConverter x:Key="PositiveToBooleanConverter" />
                <converters:BatteryPercentageConverter x:Key="BatteryPercentageConverter" />
                <converters:HideGridRowConverter x:Key="HideGridRowConverter" />
                <converters:KilowattConverter x:Key="KilowattConverter" />
                <converters:PositiveBarGraphConverter x:Key="PositiveBarGraphConverter" />
                <converters:GridExportingToVisibilityConverter x:Key="GridExportingToVisibilityConverter" />
                <converters:GridImportingToVisibilityConverter x:Key="GridImportingToVisibilityConverter" />
                <converters:BatteryExportingToVisibilityConverter x:Key="BatteryExportingToVisibilityConverter"/>
                <converters:BatteryImportingToVisibilityConverter x:Key="BatteryImportingToVisibilityConverter"/>
                <converters:StatusToBackgroundColorConverter x:Key="StatusToBackgroundColorConverter"/>
                <converters:NegateValueConverter x:Key="NegateValueConverter"/>
                <converters:VisibilityCollapsedLessThan50Converter x:Key="VisibilityCollapsedLessThan50Converter"/>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="0" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="320"/>
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <!-- Battery gauge -->
            <gauge:SfRadialGauge Margin="10,10,10,10" Grid.Column="0"  WidthRequest="260" HeightRequest="260"  VerticalOptions="Center" BackgroundColor="Black">
                <gauge:SfRadialGauge.Axes>
                    <gauge:RadialAxis StartAngle="95" EndAngle="85" ShowLabels="False" ShowTicks="False" ShowAxisLine="True" RadiusFactor="1" TickPosition="Cross" TickOffset="30">
                        
                        <gauge:RadialAxis.AxisLineStyle>
                            <gauge:RadialLineStyle Fill="{Binding Status, Converter={StaticResource StatusToBackgroundColorConverter}}" ThicknessUnit="Pixel" Thickness="30">
                            </gauge:RadialLineStyle>
                        </gauge:RadialAxis.AxisLineStyle>

                        <gauge:RadialAxis.Ranges>
                            <gauge:RadialRange StartValue="0" EndValue="{Binding InstantaneousPower.BatteryStoragePercent}" StartWidth="30" EndWidth="30" Fill="{Binding Status, Converter={StaticResource StatusToColorConverter}}"  />
                            <gauge:RadialRange StartValue="{Binding AnimatedBatteryPercentStart}"  EndValue="{Binding AnimatedBatteryPercentEnd}" StartWidth="30" EndWidth="30" Fill="#30000000" />
                            <gauge:RadialRange StartValue="0" EndValue="{Binding EnergySiteInfo.ReservePercent}" StartWidth="30" EndWidth="30" Fill="#40000000"  />
                            <gauge:RadialRange StartValue="{Binding MinBatteryPercentToday}" EndValue="{Binding MaxBatteryPercentToday}" StartWidth="5" EndWidth="5" RangeOffset="35" Fill="Green" />
                            <!-- Ticks because the control doesn't let you put normal ticks over the range -->
                            <gauge:RadialRange StartValue="9.7"  EndValue="10.3" StartWidth="35" EndWidth="35" Fill="Black"/>
                            <gauge:RadialRange StartValue="19.7" EndValue="20.3" StartWidth="35" EndWidth="35" Fill="Black"/>
                            <gauge:RadialRange StartValue="29.7" EndValue="30.3" StartWidth="35" EndWidth="35" Fill="Black"/>
                            <gauge:RadialRange StartValue="39.7" EndValue="40.3" StartWidth="35" EndWidth="35" Fill="Black"/>
                            <gauge:RadialRange StartValue="49.7" EndValue="50.3" StartWidth="35" EndWidth="35" Fill="Black" />
                            <gauge:RadialRange StartValue="59.7" EndValue="60.3" StartWidth="35" EndWidth="35" Fill="Black" />
                            <gauge:RadialRange StartValue="69.7" EndValue="70.3" StartWidth="35" EndWidth="35" Fill="Black" />
                            <gauge:RadialRange StartValue="79.7" EndValue="80.3" StartWidth="35" EndWidth="35" Fill="Black" />
                            <gauge:RadialRange StartValue="89.7" EndValue="90.3" StartWidth="35" EndWidth="35" Fill="Black" />
                        </gauge:RadialAxis.Ranges>
                        <gauge:RadialAxis.Annotations>
                            <gauge:GaugeAnnotation>
                                <gauge:GaugeAnnotation.Content>
                                    <Grid HorizontalOptions="Center" WidthRequest="200">
                                        <StackLayout Orientation="Horizontal"  HorizontalOptions="Center">
                                            <Image HeightRequest="40" WidthRequest="40" Source="icon_battery.png"  />
                                            <Label Text="{Binding InstantaneousPower.BatteryStoragePercent, Converter={StaticResource BatteryPercentageConverter}}" TextColor="White" FontSize="{Binding LargeFontSize}"  />
                                        </StackLayout>
                                    </Grid>
                                </gauge:GaugeAnnotation.Content> 
                            </gauge:GaugeAnnotation>
                            <gauge:GaugeAnnotation DirectionUnit="Angle" DirectionValue="270" PositionFactor="0.35">
                                <gauge:GaugeAnnotation.Content>
                                    <Image HeightRequest="40" WidthRequest="40" Source="storm_watch.png" IsVisible="{Binding InstantaneousPower.StormWatchActive, FallbackValue='False'}" />
                                </gauge:GaugeAnnotation.Content>
                            </gauge:GaugeAnnotation>
                            <gauge:GaugeAnnotation DirectionUnit="Angle" DirectionValue="270" PositionFactor="0.35">
                                <gauge:GaugeAnnotation.Content>
                                    <Image HeightRequest="40" WidthRequest="40" Source="grid_disconnected.png" IsVisible="{Binding InstantaneousPower.GridActive, Converter={StaticResource NegateValueConverter}, FallbackValue='False'}"  />
                                </gauge:GaugeAnnotation.Content>
                            </gauge:GaugeAnnotation>
                            <gauge:GaugeAnnotation DirectionUnit="Angle" DirectionValue="225" PositionFactor="1">
                                <gauge:GaugeAnnotation.Content>
                                    <Image HeightRequest="40" WidthRequest="40" Margin="-50,-30,0,0" Source="icon_grid_export_yellow.png" IsVisible="{Binding InstantaneousPower.GridPower, FallbackValue='False', Converter={StaticResource GridExportingToVisibilityConverter}}" />
                                </gauge:GaugeAnnotation.Content>
                            </gauge:GaugeAnnotation>
                            <gauge:GaugeAnnotation DirectionUnit="Angle" DirectionValue="315" PositionFactor="1">
                                <gauge:GaugeAnnotation.Content>
                                    <Image HeightRequest="40" WidthRequest="40" Margin="0,-30,-50,0" Source="icon_battery_import.png" IsVisible="{Binding InstantaneousPower.BatteryPower, FallbackValue='False', Converter={StaticResource BatteryImportingToVisibilityConverter}}" />
                                </gauge:GaugeAnnotation.Content>
                            </gauge:GaugeAnnotation>
                            <gauge:GaugeAnnotation DirectionUnit="Angle" DirectionValue="45" PositionFactor="1">
                                <gauge:GaugeAnnotation.Content>
                                    <Image HeightRequest="40" WidthRequest="40" Margin="0,30,-50,0" Source="icon_battery_export.png" IsVisible="{Binding InstantaneousPower.BatteryPower, FallbackValue='False', Converter={StaticResource BatteryExportingToVisibilityConverter}}" />
                                </gauge:GaugeAnnotation.Content>
                            </gauge:GaugeAnnotation>
                            <gauge:GaugeAnnotation DirectionUnit="Angle" DirectionValue="135" PositionFactor="1">
                                <gauge:GaugeAnnotation.Content>
                                    <Image HeightRequest="40" WidthRequest="40" Margin="-50,30,0,0" Source="icon_grid_import.png" IsVisible="{Binding InstantaneousPower.GridPower, FallbackValue='False', Converter={StaticResource GridImportingToVisibilityConverter}}" />
                                </gauge:GaugeAnnotation.Content>
                            </gauge:GaugeAnnotation>
                        </gauge:RadialAxis.Annotations>
                    </gauge:RadialAxis>
                </gauge:SfRadialGauge.Axes>
            </gauge:SfRadialGauge>
                
         

            <!-- Instantaneous Power - Graph View -->
            <Grid Grid.Column="1" IsVisible="False"   x:Name="powerGridView" VerticalOptions="Center" HorizontalOptions="Center" Margin="10"  RowSpacing="10" IsClippedToBounds="True" Padding="0,5" MaximumWidthRequest="{Binding BarChartMaxWidth}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <!-- Home -->
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    
                    <!--Solar -->
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />

                </Grid.RowDefinitions>

                <!-- Home Use -->
                <Image Source="icon_home.png" WidthRequest="50"  VerticalOptions="End" Grid.Row="0" Grid.Column="0" Margin="0,-5,10,-5"/>
                <StackLayout Orientation="Horizontal" Grid.Column="1">
                    <Label TextColor="DeepSkyBlue" HorizontalOptions="Start" VerticalTextAlignment="End" Margin="{Binding BigNumberMargin}"  FontSize="{Binding LargeFontSize}"  Text="{Binding InstantaneousPower.HomePower, Mode=OneWay, Converter={StaticResource KilowattConverter}}" ></Label>
                    <Label FontSize="{Binding SmallFontSize}" TextColor="#888888" VerticalTextAlignment="End" Text="kW" Margin="0,0,0,-5" />
                </StackLayout>

                <Rectangle HorizontalOptions="Start" Grid.Row="1" Grid.Column="1" Fill="DeepSkyBlue" WidthRequest="{Binding InstantaneousPower.HomePower, Mode=OneWay, Converter={StaticResource PositiveBarGraphConverter}}" HeightRequest="20" />
                <Image Grid.Column="0" Grid.Row="1" Grid.RowSpan="2" Source="arrow_to_house.png" WidthRequest="40"  IsVisible="{Binding InstantaneousPower.HomePower, Mode=OneWay, Converter={StaticResource HideGridRowConverter}}" />

                <StackLayout Orientation="Horizontal" Grid.Column="1" Grid.Row="2" Margin="0,-5">
                    <Image Source="icon_solar.png" WidthRequest="20" VerticalOptions="Center" IsVisible="{Binding InstantaneousPower.SolarToHome, Mode=OneWay, Converter={StaticResource HideGridRowConverter}}" Margin="5"/>
                    <Label TextColor="Gold" Margin="0,0,5,0" HorizontalOptions="Center" VerticalTextAlignment="Start" FontSize="{Binding SmallFontSize}" Text="{Binding InstantaneousPower.SolarToHome, Mode=OneWay, Converter={StaticResource KilowattConverter}}"  LineBreakMode="NoWrap"  IsVisible="{Binding InstantaneousPower.SolarToHome, Mode=OneWay, Converter={StaticResource HideGridRowConverter}}"></Label>
                    <Image Source="icon_battery.png" WidthRequest="20" VerticalOptions="Center" IsVisible="{Binding InstantaneousPower.BatteryToHome, Mode=OneWay, Converter={StaticResource HideGridRowConverter}}"  Margin="5"/>
                    <Label TextColor="LimeGreen" Margin="0,0,5,0" HorizontalOptions="Center" VerticalTextAlignment="Start" FontSize="{Binding SmallFontSize}" Text="{Binding InstantaneousPower.BatteryToHome, Mode=OneWay, Converter={StaticResource KilowattConverter}}" LineBreakMode="NoWrap"  IsVisible="{Binding InstantaneousPower.BatteryToHome, Mode=OneWay, Converter={StaticResource HideGridRowConverter}}"></Label>
                    <Image Source="icon_grid.png" WidthRequest="20" VerticalOptions="Center" IsVisible="{Binding InstantaneousPower.AllGridImport, Mode=OneWay, Converter={StaticResource HideGridRowConverter}}"  Margin="5"/>
                    <Label TextColor="LightGray" Margin="0,0,5,0" HorizontalOptions="Center" VerticalTextAlignment="Start" FontSize="{Binding SmallFontSize}" Text="{Binding InstantaneousPower.AllGridImport, Mode=OneWay, Converter={StaticResource KilowattConverter}}" LineBreakMode="NoWrap" IsVisible="{Binding InstantaneousPower.AllGridImport, Mode=OneWay, Converter={StaticResource HideGridRowConverter}}"></Label>
                </StackLayout>

                <StackLayout Orientation="Horizontal" Grid.Row="3" Grid.Column="1" Spacing="1" IsClippedToBounds="True" HorizontalOptions="Start" Margin="0,-4">
                    <Rectangle Fill="Gold" WidthRequest="{Binding InstantaneousPower.SolarToHome, Mode=OneWay, Converter={StaticResource PositiveBarGraphConverter}}"  IsVisible="{Binding InstantaneousPower.SolarToHome, Mode=OneWay, Converter={StaticResource HideGridRowConverter}}" HeightRequest="10" />
                    <Rectangle Fill="LimeGreen" WidthRequest="{Binding InstantaneousPower.BatteryToHome, Mode=OneWay, Converter={StaticResource PositiveBarGraphConverter}}" IsVisible="{Binding InstantaneousPower.BatteryToHome, Mode=OneWay, Converter={StaticResource HideGridRowConverter}}" HeightRequest="10" />
                    <Rectangle Fill="LightGray" WidthRequest="{Binding InstantaneousPower.AllGridImport, Mode=OneWay, Converter={StaticResource PositiveBarGraphConverter}}" IsVisible="{Binding InstantaneousPower.AllGridImport, Mode=OneWay, Converter={StaticResource HideGridRowConverter}}" HeightRequest="10" />
                </StackLayout>

                <!-- Solar Generation -->
                <Image Source="icon_solar.png" WidthRequest="50"  Grid.Column="0" Grid.Row="4" VerticalOptions="End" Margin="0,-5,10,-5"/>
                <StackLayout Orientation="Horizontal" Grid.Column="1" Grid.Row="4">
                    <Label TextColor="Gold" HorizontalOptions="Start" VerticalTextAlignment="End" Margin="{Binding BigNumberMargin}"  FontSize="{Binding LargeFontSize}"  Text="{Binding InstantaneousPower.SolarPower, Mode=OneWay, Converter={StaticResource KilowattConverter}}" ></Label>
                    <Label FontSize="{Binding SmallFontSize}" TextColor="#888888" VerticalTextAlignment="End" Text="kW" Margin="0,0,0,-5" />
                </StackLayout>
                <Rectangle Grid.Row="5" Grid.Column="1" HorizontalOptions="Start" Fill="Gold" WidthRequest="{Binding InstantaneousPower.SolarPower, Mode=OneWay, Converter={StaticResource PositiveBarGraphConverter}}" IsVisible="{Binding InstantaneousPower.SolarPower, Mode=OneWay, Converter={StaticResource HideGridRowConverter}}" HeightRequest="20"  />
                <Image Grid.Column="0" Grid.Row="5" Grid.RowSpan="2" Source="arrow_from_solar.png" WidthRequest="40"  IsVisible="{Binding InstantaneousPower.SolarPower, Mode=OneWay, Converter={StaticResource HideGridRowConverter}}" />

                <StackLayout Orientation="Horizontal" Grid.Column="1" Grid.Row="6" Margin="0,-5">
                    <Image Source="icon_home.png" WidthRequest="20" VerticalOptions="Center" IsVisible="{Binding InstantaneousPower.SolarToHome, Mode=OneWay, Converter={StaticResource HideGridRowConverter}}"  Margin="5"/>
                    <Label TextColor="DeepSkyBlue" Margin="0,0,5,0" HorizontalOptions="Center" VerticalTextAlignment="Start" FontSize="{Binding SmallFontSize}" Text="{Binding InstantaneousPower.SolarToHome, Mode=OneWay, Converter={StaticResource KilowattConverter}}"  LineBreakMode="NoWrap" IsVisible="{Binding InstantaneousPower.SolarToHome, Mode=OneWay, Converter={StaticResource HideGridRowConverter}}"></Label>
                    <Image Source="icon_battery.png" WidthRequest="20" VerticalOptions="Center" IsVisible="{Binding InstantaneousPower.AllBatteryCharge, Mode=OneWay, Converter={StaticResource HideGridRowConverter}}"  Margin="5"/>
                    <Label TextColor="LimeGreen" Margin="0,0,5,0" HorizontalOptions="Center" VerticalTextAlignment="Start" FontSize="{Binding SmallFontSize}" Text="{Binding InstantaneousPower.AllBatteryCharge, Mode=OneWay, Converter={StaticResource KilowattConverter}}" LineBreakMode="NoWrap" IsVisible="{Binding InstantaneousPower.AllBatteryCharge, Mode=OneWay, Converter={StaticResource HideGridRowConverter}}"></Label>
                    <Image Source="icon_grid.png" WidthRequest="20" VerticalOptions="Center" IsVisible="{Binding InstantaneousPower.SolarToGrid, Mode=OneWay, Converter={StaticResource HideGridRowConverter}}"  Margin="5" />
                    <Label TextColor="LightGray" Margin="0,0,5,0" HorizontalOptions="Center" VerticalTextAlignment="Start" FontSize="{Binding SmallFontSize}" Text="{Binding InstantaneousPower.SolarToGrid, Mode=OneWay, Converter={StaticResource KilowattConverter}}" LineBreakMode="NoWrap" IsVisible="{Binding InstantaneousPower.SolarToGrid, Mode=OneWay, Converter={StaticResource HideGridRowConverter}}"></Label>
                </StackLayout>

                <StackLayout Orientation="Horizontal" Grid.Row="7" Grid.Column="1" Spacing="1"  HorizontalOptions="Start" Margin="0,-4">
                    <Rectangle Fill="DeepSkyBlue" WidthRequest="{Binding InstantaneousPower.SolarToHome, Mode=OneWay, Converter={StaticResource PositiveBarGraphConverter}}" IsVisible="{Binding InstantaneousPower.SolarToHome, Mode=OneWay, Converter={StaticResource HideGridRowConverter}}" HeightRequest="10" />
                    <Rectangle Fill="LimeGreen" WidthRequest="{Binding InstantaneousPower.AllBatteryCharge, Mode=OneWay, Converter={StaticResource PositiveBarGraphConverter}}" IsVisible="{Binding InstantaneousPower.AllBatteryCharge, Mode=OneWay, Converter={StaticResource HideGridRowConverter}}" HeightRequest="10" />
                    <Rectangle Fill="LightGray" WidthRequest="{Binding InstantaneousPower.SolarToGrid, Mode=OneWay, Converter={StaticResource PositiveBarGraphConverter}}" IsVisible="{Binding InstantaneousPower.SolarToGrid, Mode=OneWay, Converter={StaticResource HideGridRowConverter}}" HeightRequest="10" />
                </StackLayout>
                

            </Grid>


            <!-- Instantaneous Power - flow view -->
            <Grid x:Name="powerFlowView" Grid.Column="1" HorizontalOptions="Fill"  VerticalOptions="Center" IsVisible="False" Margin="5" MinimumWidthRequest="360" MaximumWidthRequest="440" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="178" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="60" />
                    <RowDefinition Height="178"/>
                    <RowDefinition  Height="60" />
                </Grid.RowDefinitions>

                <!-- Flows. Numbers in path name show degrees for start and end. Animated arcs are 20 degrees long -->
                <Ellipse x:Name="background" WidthRequest="170" HeightRequest="170" Stroke="#202020" StrokeThickness="12" Grid.Row="1" Grid.Column="1"/>

                <Path x:Name="solarToHomePath_295_242"  Data="M 50,50 L 130,130" Stroke="Gold" IsVisible="{Binding InstantaneousPower.SolarToHome, Mode=OneWay, Converter={StaticResource VisibilityCollapsedLessThan50Converter}, FallbackValue=False}" StrokeThickness="12" Grid.Row="1" Grid.Column="1" />
                <Path x:Name="solarToHomeAnimationPath" Data="M 50,50 L 75,75" Stroke="DeepSkyBlue" IsVisible="{Binding InstantaneousPower.SolarToHome, Mode=OneWay, Converter={StaticResource VisibilityCollapsedLessThan50Converter}, FallbackValue=False}" StrokeThickness="12" Grid.Row="1" Grid.Column="1" />
                <Path x:Name="solarToHomeArrowHead" Data="M 133,117 L 132,133 L 117,132" Stroke="Black" StrokeThickness="6" Grid.Row="1" Grid.Column="1" IsVisible="{Binding InstantaneousPower.SolarToHome, Mode=OneWay, Converter={StaticResource VisibilityCollapsedLessThan50Converter}, FallbackValue=False}" />

                <Path x:Name="solarToGridPath_330_30" Data="M 42.5,11.39 A 85,85 0 0 1 127.5,11.388" Stroke="Gold" IsVisible="{Binding InstantaneousPower.SolarToGrid, Mode=OneWay, Converter={StaticResource VisibilityCollapsedLessThan50Converter}, FallbackValue=False}" StrokeThickness="12" Grid.Row="1" Grid.Column="1" />
                <Path x:Name="solarToGridAnimationPath" Data="M 42.5,11.39 A 85,85 0 0 1 70.24,1.29" Stroke="LightGray" IsVisible="{Binding InstantaneousPower.SolarToGrid, Mode=OneWay, Converter={StaticResource VisibilityCollapsedLessThan50Converter}, FallbackValue=False}" StrokeThickness="12" Grid.Row="1" Grid.Column="1">
                    <Path.RenderTransform>
                        <RotateTransform Angle="0" CenterX="91" CenterY="85"/>
                    </Path.RenderTransform>
                </Path>
                <Path x:Name="solarToGridArrowHead" Data="M 126,3 L 135,16 L 123,23" Stroke="Black" StrokeThickness="6" Grid.Row="1" Grid.Column="1" IsVisible="{Binding InstantaneousPower.SolarToGrid, Mode=OneWay, Converter={StaticResource VisibilityCollapsedLessThan50Converter}, FallbackValue=False}" />

                <Path x:Name="batteryToHomePath_210_145" Data="M 42.5,158.61 A 85,85 0 0 0 133.75,154.63" Stroke="LimeGreen" IsVisible="{Binding InstantaneousPower.BatteryToHome, Mode=OneWay, Converter={StaticResource VisibilityCollapsedLessThan50Converter}, FallbackValue=False}" StrokeThickness="12" Grid.Row="1" Grid.Column="1" />
                <Path x:Name="batteryToHomeAnimationPath" Data="M 42.5,158.61 A 85,85 0 0 0 70.24,168.71" Stroke="DeepSkyBlue" IsVisible="{Binding InstantaneousPower.BatteryToHome, Mode=OneWay, Converter={StaticResource VisibilityCollapsedLessThan50Converter}, FallbackValue=False}" StrokeThickness="12" Grid.Row="1" Grid.Column="1" >
                    <Path.RenderTransform>
                        <RotateTransform Angle="0" CenterX="85" CenterY="80"/>
                    </Path.RenderTransform>
                </Path>
                <Path x:Name="batteryToHomeArrowHead" Data="M 117,153 L 132,160 L 119,175" Stroke="Black" StrokeThickness="6" Grid.Row="1" Grid.Column="1" IsVisible="{Binding InstantaneousPower.BatteryToHome, Mode=OneWay, Converter={StaticResource VisibilityCollapsedLessThan50Converter}, FallbackValue=False}" />

                <Path x:Name="batteryToGridPath" Data="M 50,130 L 140,40" Stroke="LimeGreen" IsVisible="{Binding InstantaneousPower.BatteryToGrid, Mode=OneWay, Converter={StaticResource VisibilityCollapsedLessThan50Converter}, FallbackValue=False}" StrokeThickness="12" Grid.Row="1" Grid.Column="1" />
                <Path x:Name="batteryToGridAnimationPath" Data="M 50,130 L 75,105" Stroke="LightGray" IsVisible="{Binding InstantaneousPower.BatteryToGrid, Mode=OneWay, Converter={StaticResource VisibilityCollapsedLessThan50Converter}, FallbackValue=False}" StrokeThickness="12" Grid.Row="1" Grid.Column="1" />
                <Path x:Name="batteryToGridArrowHead" Data="M 120,47 L 133,42 L 138,65" Stroke="Black" StrokeThickness="6" Grid.Row="1" Grid.Column="1" IsVisible="{Binding InstantaneousPower.BatteryToGrid, Mode=OneWay, Converter={StaticResource VisibilityCollapsedLessThan50Converter}, FallbackValue=False}"/>

                <Path x:Name="gridToBatteryPath" Data="M 140,40 L 50,130" Stroke="LightGray" IsVisible="{Binding InstantaneousPower.GridToBattery, Mode=OneWay, Converter={StaticResource VisibilityCollapsedLessThan50Converter}, FallbackValue=False}" StrokeThickness="12" Grid.Row="1" Grid.Column="1" />
                <Path x:Name="gridToBatteryAnimationPath" Data="M 140,40 L 115,65" Stroke="LimeGreen" IsVisible="{Binding InstantaneousPower.GridToBattery, Mode=OneWay, Converter={StaticResource VisibilityCollapsedLessThan50Converter}, FallbackValue=False}" StrokeThickness="12" Grid.Row="1" Grid.Column="1" />
                <Path x:Name="gridToBatteryArrowHead" Data="M 49,110 L 46,136 L 74,126" Stroke="Black" StrokeThickness="6" Grid.Row="1" Grid.Column="1" IsVisible="{Binding InstantaneousPower.GridToBattery, Mode=OneWay, Converter={StaticResource VisibilityCollapsedLessThan50Converter}, FallbackValue=False}" />

                <Path x:Name="solarToBatteryPath_295_242" Data="M 7.963,49.077 A 85,85 0 0 0 9.949,124.905" Stroke="Gold" IsVisible="{Binding InstantaneousPower.SolarToBattery, Mode=OneWay, Converter={StaticResource VisibilityCollapsedLessThan50Converter}, FallbackValue=False}" StrokeThickness="12" Grid.Row="1" Grid.Column="1" />
                <Path x:Name="solarToBatteryAnimationPath" Data="M 7.963,49.077 A 85,85 0 0 0 0.32,77.59" Stroke="LimeGreen" IsVisible="{Binding InstantaneousPower.SolarToBattery, Mode=OneWay, Converter={StaticResource VisibilityCollapsedLessThan50Converter}, FallbackValue=False}" StrokeThickness="12" Grid.Row="1" Grid.Column="1">
                    <Path.RenderTransform>
                        <RotateTransform Angle="0" CenterX="85" CenterY="90"/>
                    </Path.RenderTransform>
                </Path>
                <Path x:Name="solarToBatteryArrowHead" Data="M 0,123 L 12,130 L 25,110" Stroke="Black" StrokeThickness="6" Grid.Row="1" Grid.Column="1" IsVisible="{Binding InstantaneousPower.SolarToHome, Mode=OneWay, Converter={StaticResource VisibilityCollapsedLessThan50Converter}, FallbackValue=False}" />

                <Path x:Name="gridToHomePath_60_120" Data="M 158.61,42.5 A 85,85 0 0 1 158.61,127.5" Stroke="LightGray" IsVisible="{Binding InstantaneousPower.GridToHome, Mode=OneWay, Converter={StaticResource VisibilityCollapsedLessThan50Converter}, FallbackValue=False}" StrokeThickness="12" Grid.Row="1" Grid.Column="1" />
                <Path x:Name="gridToHomeAnimationPath" Data="M 158.61,42.5 A 100,100 0 0 1 168.71,70.24" Stroke="DeepSkyBlue" IsVisible="{Binding InstantaneousPower.GridToHome, Mode=OneWay, Converter={StaticResource VisibilityCollapsedLessThan50Converter}, FallbackValue=False}" StrokeThickness="12" Grid.Row="1" Grid.Column="1">
                    <Path.RenderTransform>
                        <RotateTransform Angle="0" CenterX="85" CenterY="85"/>
                    </Path.RenderTransform>
                </Path>
                <Path x:Name="gridToHomeArrowHead" Data="M 152,111 L 160,130 L 172,120" Stroke="Black" StrokeThickness="6" Grid.Row="1" Grid.Column="1" IsVisible="{Binding InstantaneousPower.GridToHome, Mode=OneWay, Converter={StaticResource VisibilityCollapsedLessThan50Converter}, FallbackValue=False}"/>

                <Image Source="flow_background.png" WidthRequest="170" HeightRequest="170" VerticalOptions="Center" Grid.Row="1" Grid.Column="1"/>

                <!-- Power kW labels -->
                <Label TextColor="Gold" Grid.Row="0" Grid.ColumnSpan="3" VerticalOptions="End" HorizontalOptions="Start" FontSize="{Binding LargeFontSize}" Text="{Binding InstantaneousPower.SolarPower, Mode=OneWay, Converter={StaticResource KilowattConverter}}" IsVisible="{Binding InstantaneousPower.SolarPower, Mode=OneWay, Converter={StaticResource VisibilityCollapsedLessThan50Converter}}" Margin="30,0,0,-20"></Label>
                <Label TextColor="Gold" Grid.Row="0" Grid.ColumnSpan="3" VerticalOptions="End" HorizontalOptions="Center" FontSize="{Binding SmallFontSize}" Text="{Binding InstantaneousPower.SolarToGrid, Mode=OneWay, Converter={StaticResource KilowattConverter}}" IsVisible="{Binding InstantaneousPower.SolarToGrid, Mode=OneWay, Converter={StaticResource VisibilityCollapsedLessThan50Converter}}" ></Label>
                <Label TextColor="LightGray" Grid.Row="0" Grid.ColumnSpan="3" VerticalOptions="End" HorizontalOptions="End"  FontSize="{Binding LargeFontSize}" Text="{Binding InstantaneousPower.GridPower, Mode=OneWay, Converter={StaticResource KilowattConverter}}" IsVisible="{Binding InstantaneousPower.GridPower, Mode=OneWay, Converter={StaticResource VisibilityCollapsedLessThan50Converter}}"  Margin="0,0,30,-20"></Label>

                <Label TextColor="Gold" Grid.Row="1" Grid.Column="0"  VerticalOptions="Center"  HorizontalOptions="End" FontSize="{Binding SmallFontSize}" Text="{Binding InstantaneousPower.SolarToBattery, Mode=OneWay, Converter={StaticResource KilowattConverter}}" IsVisible="{Binding InstantaneousPower.SolarToBattery, Mode=OneWay, Converter={StaticResource VisibilityCollapsedLessThan50Converter}}"  Margin="0,0,10,0" />
                <Label TextColor="Gold" Grid.Row="1" Grid.Column="1"  VerticalOptions="Center" FontSize="{Binding SmallFontSize}" Margin="80,-50,0,0" Text="{Binding InstantaneousPower.SolarToHome, Mode=OneWay, Converter={StaticResource KilowattConverter}}" IsVisible="{Binding InstantaneousPower.SolarToHome, Mode=OneWay, Converter={StaticResource VisibilityCollapsedLessThan50Converter}}" HorizontalOptions="Start" ></Label>
                <Label TextColor="LightGray" Grid.Row="1" Grid.Column="2"  VerticalOptions="Center" HorizontalOptions="Start" FontSize="{Binding SmallFontSize}" Margin="5,0,0,0" Text="{Binding InstantaneousPower.GridToHome, Mode=OneWay, Converter={StaticResource KilowattConverter}}" IsVisible="{Binding InstantaneousPower.GridToHome, Mode=OneWay, Converter={StaticResource VisibilityCollapsedLessThan50Converter}}"  ></Label>
                <Label TextColor="LightGray" Grid.Row="1" Grid.Column="1" VerticalOptions="Center" HorizontalOptions="End" FontSize="{Binding SmallFontSize}" Margin="0,0,100,20"  Text="{Binding InstantaneousPower.GridToBattery, Mode=OneWay, Converter={StaticResource KilowattConverter}}" IsVisible="{Binding InstantaneousPower.GridToBattery, Mode=OneWay, Converter={StaticResource VisibilityCollapsedLessThan50Converter}}"></Label>
                <Label TextColor="LimeGreen" Grid.Row="1" Grid.Column="1"  VerticalOptions="Center" HorizontalOptions="End" FontSize="{Binding SmallFontSize}" Margin="0,0,100,20" Text="{Binding InstantaneousPower.BatteryToGrid, Mode=OneWay, Converter={StaticResource KilowattConverter}}" IsVisible="{Binding InstantaneousPower.BatteryToGrid, Mode=OneWay, Converter={StaticResource VisibilityCollapsedLessThan50Converter}}" ></Label>

                <Label TextColor="LimeGreen" Grid.Row="2" Grid.ColumnSpan="3" VerticalOptions="Start" HorizontalOptions="Start" FontSize="{Binding LargeFontSize}" Text="{Binding InstantaneousPower.BatteryPower, Mode=OneWay, Converter={StaticResource KilowattConverter}, ConverterParameter='abs'}" IsVisible="{Binding InstantaneousPower.BatteryPower, Mode=OneWay, Converter={StaticResource VisibilityCollapsedLessThan50Converter}}" Margin="30,-20,0,0"></Label>
                <Label TextColor="LimeGreen" Grid.Row="2" Grid.ColumnSpan="3" VerticalOptions="Start" HorizontalOptions="Center" FontSize="{Binding SmallFontSize}" Text="{Binding InstantaneousPower.BatteryToHome, Mode=OneWay, Converter={StaticResource KilowattConverter}}" IsVisible="{Binding InstantaneousPower.BatteryToHome, Mode=OneWay, Converter={StaticResource VisibilityCollapsedLessThan50Converter}}" Margin="0,-5,0,0"></Label>
                <Label TextColor="DeepSkyBlue" Grid.Row="2" Grid.ColumnSpan="3"  VerticalOptions="Start" HorizontalOptions="End" FontSize="{Binding LargeFontSize}" Text="{Binding InstantaneousPower.HomePower, Mode=OneWay, Converter={StaticResource KilowattConverter}}" IsVisible="{Binding InstantaneousPower.HomePower, Mode=OneWay, Converter={StaticResource VisibilityCollapsedLessThan50Converter}}" Margin="0,-20,30,0"></Label>

                <Label FontSize="20" Margin="0,0,0,0" TextColor="#888888" HorizontalOptions="Center" VerticalOptions="End" Grid.Row="2" Grid.Column="1" Text="kW" />

            </Grid>


        </Grid>

        <!-- Daily Energy View -->
        <Grid x:Name="dailyEnergyGrid" Margin="20,10,20,10" HorizontalOptions="FillAndExpand"  VerticalOptions="FillAndExpand"  RowSpacing="10" SizeChanged="dailyEnergyGrid_SizeChanged">
            <Grid.Resources>
                <converters:KilowattHourConverter x:Key="KilowattHourConverter" />
                <converters:NegateValueConverter x:Key="NegateValueConverter" />
                <converters:RateCurrencyConverter x:Key="RateCurrencyConverter"/>
                <converters:PostitiveNegativeCostBrushConverter x:Key="PostitiveNegativeCostBrushConverter"/>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Label HorizontalOptions="Center" VerticalOptions="Center" FontSize="{Binding LargeCaptionFontSize}" TextColor="DarkGray" Grid.Row="1" Grid.Column="0">Yesterday</Label>
            <Label HorizontalOptions="Center" VerticalOptions="Center" FontSize="{Binding LargeCaptionFontSize}" TextColor="DarkGray" Grid.Row="2" Grid.Column="0">Today · kWh</Label>
            
            <Image Source="icon_home.png" Grid.Row="0" Grid.Column="1" VerticalOptions="Center" HorizontalOptions="Center" WidthRequest="30"></Image>
            <Image Source="icon_solar.png" Grid.Row="0" Grid.Column="2" VerticalOptions="Center" HorizontalOptions="Center" WidthRequest="30"></Image>
            <Image Source="icon_grid.png" Grid.Row="0" Grid.Column="3" VerticalOptions="Center" HorizontalOptions="Center" WidthRequest="30"></Image>
            <Image Source="icon_battery.png" Grid.Row="0" Grid.Column="4" VerticalOptions="Center" HorizontalOptions="Center" WidthRequest="30"></Image>
            <Label Grid.Row="2" Grid.Column="1" TextColor="DeepSkyBlue" VerticalTextAlignment="Center" HorizontalTextAlignment="Center" FontSize="{Binding LargeFontSize}" Text="{Binding EnergyTotalsToday.HomeEnergy, Converter={StaticResource KilowattHourConverter}}" ></Label>
            <Label Grid.Row="1" Grid.Column="1" TextColor="DeepSkyBlue" Opacity="0.7" VerticalTextAlignment="Center" HorizontalTextAlignment="Center" FontSize="{Binding LargeFontSize}" Text="{Binding EnergyTotalsYesterday.HomeEnergy, Converter={StaticResource KilowattHourConverter}}" ></Label>
            <Label Grid.Row="2" Grid.Column="2" TextColor="Gold" VerticalTextAlignment="Center" HorizontalTextAlignment="Center" FontSize="{Binding LargeFontSize}" Text="{Binding EnergyTotalsToday.SolarEnergy, Converter={StaticResource KilowattHourConverter}}" ></Label>
            <Label Grid.Row="1" Grid.Column="2" TextColor="Gold" Opacity="0.7" VerticalTextAlignment="Center" HorizontalTextAlignment="Center" FontSize="{Binding LargeFontSize}" Text="{Binding EnergyTotalsYesterday.SolarEnergy, Converter={StaticResource KilowattHourConverter}}" ></Label>
            
            <StackLayout Grid.Row="2" Grid.Column="3" Orientation="Vertical" Spacing="-20" HorizontalOptions="Center" VerticalOptions="Center">
                <Label Grid.Row="1" Grid.Column="3" TextColor="LightGray" VerticalTextAlignment="Center" HorizontalTextAlignment="Center" FontSize="{Binding LargeFontSize}" Text="{Binding EnergyTotalsToday.GridEnergyImported, Converter={StaticResource KilowattHourConverter}}" IsVisible="{Binding ShowSingleGridSettingsToday}" LineBreakMode="NoWrap"></Label>
                <StackLayout Orientation="Horizontal" VerticalOptions="Center" HorizontalOptions="Center" IsVisible="{Binding ShowBothGridSettingsToday}">
                    <Image Source="icon_grid_import.png" WidthRequest="{Binding SmallFontSize}" VerticalOptions="Center"  />
                    <Label TextColor="LightGray" VerticalTextAlignment="Center" FontSize="{Binding MediumFontSize}" Text="{Binding EnergyTotalsToday.GridEnergyImported, Converter={StaticResource KilowattHourConverter}}" ></Label>
                </StackLayout>
                <StackLayout Orientation="Horizontal" VerticalOptions="Center" HorizontalOptions="Center" IsVisible="{Binding ShowBothGridSettingsToday}" >
                    <Label TextColor="LightGray" VerticalTextAlignment="Center" FontSize="{Binding MediumFontSize}"  Text="{Binding EnergyTotalsToday.GridEnergyExported, Converter={StaticResource KilowattHourConverter}}" />
                    <Image Source="icon_grid_export.png" WidthRequest="{Binding SmallFontSize}" VerticalOptions="Center" Margin="0,5,0,0" />
                </StackLayout>
                <Label IsVisible="{Binding ShowEnergyCosts}" TextColor="{Binding EnergyTotalsToday.EnergyNetCost, Converter={StaticResource PostitiveNegativeCostBrushConverter}}"  VerticalTextAlignment="Center" HorizontalTextAlignment="Center" FontSize="{Binding MediumFontSize}" Text="{Binding EnergyTotalsToday.EnergyNetCost, Converter={StaticResource RateCurrencyConverter}}" LineBreakMode="NoWrap" Margin="0,5,0,0"></Label>
            </StackLayout>
            <StackLayout Grid.Row="1" Grid.Column="3" Orientation="Vertical" Spacing="-20" HorizontalOptions="Center" VerticalOptions="Center" >
                <Label Grid.Row="1" Grid.Column="3" TextColor="LightGray" Opacity="0.7" VerticalTextAlignment="Center" HorizontalTextAlignment="Center" FontSize="{Binding LargeFontSize}" Text="{Binding EnergyTotalsYesterday.GridEnergyImported, Converter={StaticResource KilowattHourConverter}}" IsVisible="{Binding ShowSingleGridSettingsYesterday}" LineBreakMode="NoWrap"></Label>
                <StackLayout Orientation="Horizontal" VerticalOptions="Center" HorizontalOptions="Center" IsVisible="{Binding ShowBothGridSettingsYesterday}">
                    <Image Source="icon_grid_import.png" Opacity="0.7" WidthRequest="{Binding SmallFontSize}" VerticalOptions="Center"  />
                    <Label TextColor="LightGray" Opacity="0.7" VerticalTextAlignment="Center" FontSize="{Binding MediumFontSize}" Text="{Binding EnergyTotalsYesterday.GridEnergyImported, Converter={StaticResource KilowattHourConverter}}" ></Label>
                </StackLayout>
                <StackLayout Orientation="Horizontal" VerticalOptions="Center" HorizontalOptions="Center" IsVisible="{Binding ShowBothGridSettingsYesterday}" >
                    <Label TextColor="LightGray" Opacity="0.7" VerticalTextAlignment="Center" FontSize="{Binding MediumFontSize}"  Text="{Binding EnergyTotalsYesterday.GridEnergyExported, Converter={StaticResource KilowattHourConverter}}" />
                    <Image Source="icon_grid_export.png" Opacity="0.7" WidthRequest="{Binding SmallFontSize}" VerticalOptions="Center" Margin="0,5,0,0" />
                </StackLayout>
                <Label IsVisible="{Binding ShowEnergyCosts}" TextColor="{Binding EnergyTotalsYesterday.EnergyNetCost, Converter={StaticResource PostitiveNegativeCostBrushConverter}}" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" Opacity="0.7" FontSize="{Binding MediumFontSize}" Text="{Binding EnergyTotalsYesterday.EnergyNetCost, Converter={StaticResource RateCurrencyConverter}}" LineBreakMode="NoWrap" Margin="0,5,0,0"></Label>
            </StackLayout>
            <StackLayout Grid.Row="2" Grid.Column="4" Orientation="Vertical" Spacing="-20" HorizontalOptions="Center" VerticalOptions="Center">
                <StackLayout Orientation="Horizontal" VerticalOptions="Center" HorizontalOptions="Center">
                    <Image Source="icon_battery_export.png" WidthRequest="{Binding SmallFontSize}" VerticalOptions="Center" />
                    <Label TextColor="LimeGreen" VerticalTextAlignment="Center" FontSize="{Binding MediumFontSize}" Text="{Binding EnergyTotalsToday.BatteryEnergyDischarged, Converter={StaticResource KilowattHourConverter}}" ></Label>
                </StackLayout>
                <StackLayout Orientation="Horizontal" VerticalOptions="Center" HorizontalOptions="Center">
                    <Label TextColor="LimeGreen" VerticalTextAlignment="Center" FontSize="{Binding MediumFontSize}" Text="{Binding EnergyTotalsToday.BatteryEnergyCharged, Converter={StaticResource KilowattHourConverter}}" ></Label>
                    <Image Source="icon_battery_import.png" WidthRequest="{Binding SmallFontSize}" VerticalOptions="Center" Margin="0,5,0,0"/>
                </StackLayout>
            </StackLayout>
            <StackLayout Grid.Row="1" Grid.Column="4" Orientation="Vertical" Spacing="-20" HorizontalOptions="Center" VerticalOptions="Center">
                <StackLayout Orientation="Horizontal" VerticalOptions="Center" HorizontalOptions="Center">
                    <Image Source="icon_battery_export.png" Opacity="0.7" WidthRequest="{Binding SmallFontSize}" VerticalOptions="Center" />
                    <Label TextColor="LimeGreen" Opacity="0.7" VerticalTextAlignment="Center" FontSize="{Binding MediumFontSize}" Text="{Binding EnergyTotalsYesterday.BatteryEnergyDischarged, Converter={StaticResource KilowattHourConverter}}" ></Label>
                </StackLayout>
                <StackLayout Orientation="Horizontal" VerticalOptions="Center" HorizontalOptions="Center">
                    <Label TextColor="LimeGreen" Opacity="0.7" VerticalTextAlignment="Center" FontSize="{Binding MediumFontSize}" Text="{Binding EnergyTotalsYesterday.BatteryEnergyCharged, Converter={StaticResource KilowattHourConverter}}" ></Label>
                    <Image Source="icon_battery_import.png" Opacity="0.7" WidthRequest="{Binding SmallFontSize}" VerticalOptions="Center" Margin="0,5,0,0" />
                </StackLayout>
            </StackLayout>
            <!-- Power history chart -->
            <Grid x:Name="chartContainer" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="5" Margin="0"  MinimumHeightRequest="100" MaximumHeightRequest="300" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand">
                <chart:SfCartesianChart x:Name="chart" IsVisible="{Binding ShowGraph}" Margin="0,-20,0,-10" >
                    <chart:SfCartesianChart.XAxes>
                        <chart:DateTimeAxis IntervalType="Hours" Interval="6" Maximum="{Binding ChartMaxDate}">
                            <chart:DateTimeAxis.LabelStyle>
                                <chart:ChartAxisLabelStyle TextColor="DarkGray" LabelFormat="h tt" FontSize="16"/>
                            </chart:DateTimeAxis.LabelStyle>
                            <chart:DateTimeAxis.MajorGridLineStyle>
                                <chart:ChartLineStyle Stroke="#404040" />
                            </chart:DateTimeAxis.MajorGridLineStyle>
                        </chart:DateTimeAxis>
                    </chart:SfCartesianChart.XAxes>

                    <chart:SfCartesianChart.YAxes>
                        <chart:NumericalAxis RangePadding="None">
                            <chart:NumericalAxis.LabelStyle>
                                <chart:ChartAxisLabelStyle TextColor="DarkGray" LabelFormat="0 kW" FontSize="16"/>
                            </chart:NumericalAxis.LabelStyle>
                            <chart:NumericalAxis.MajorGridLineStyle>
                                <chart:ChartLineStyle Stroke="#404040" />
                            </chart:NumericalAxis.MajorGridLineStyle>
                        </chart:NumericalAxis>
                    </chart:SfCartesianChart.YAxes>

                    <chart:SfCartesianChart.Legend>
                        <chart:ChartLegend ToggleSeriesVisibility="True" Placement="Right">
                            <!--<chart:ChartLegend.LabelStyle>
       <chart:ChartLegendLabelStyle TextColor="DarkGray" />
   </chart:ChartLegend.LabelStyle>-->
                        </chart:ChartLegend>
                    </chart:SfCartesianChart.Legend>

                    <chart:AreaSeries Fill="DeepSkyBlue" Stroke="DeepSkyBlue" StrokeWidth="0.5" Opacity="0.5" ItemsSource="{Binding PowerChartSeries.Home}" Label="Home" XBindingPath="XValue" YBindingPath="YValue" />
                    <chart:AreaSeries Fill="Gold" Stroke="Gold" StrokeWidth="0.5" Opacity="0.5" ItemsSource="{Binding PowerChartSeries.Solar}" Label="Solar" XBindingPath="XValue" YBindingPath="YValue"  />
                    <chart:AreaSeries Fill="LightGray" Stroke="LightGray" StrokeWidth="0.5" Opacity="0.5" ItemsSource="{Binding PowerChartSeries.Grid}" Label="Grid" XBindingPath="XValue" YBindingPath="YValue" />
                    <chart:AreaSeries Fill="LimeGreen" Stroke="LimeGreen" StrokeWidth="0.5" Opacity="0.5" ItemsSource="{Binding PowerChartSeries.Battery}" Label="Battery" XBindingPath="XValue" YBindingPath="YValue" />
                    
                    <chart:SfCartesianChart.Annotations>
                        <chart:VerticalLineAnnotation X1="{Binding GraphDayBoundary}" Stroke="LightGray" StrokeWidth="2" />
                    </chart:SfCartesianChart.Annotations>
                </chart:SfCartesianChart>
            </Grid>
        </Grid>


    </Grid>

</ContentPage>